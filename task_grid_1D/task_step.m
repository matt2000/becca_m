function task = task_step(task)

%task.action = round( task.agent.action);
task.action = task.agent.action;
step_size = task.action(1) + ...
        2 * task.action(2) + ...
        3 * task.action(3) + ...
        4 * task.action(4) - ...
            task.action(5) - ...
        2 * task.action(6) - ...
        3 * task.action(7) - ...
        4 * task.action(8);
task.world_state = task.world_state + step_size;

% an approximation of metabolic energy
energy    = task.action(1) + ...
        2 * task.action(2) + ...
        3 * task.action(3) + ...
        4 * task.action(4) + ...
            task.action(5) + ...
        2 * task.action(6) + ...
        3 * task.action(7) + ...
        4 * task.action(8);

% ensures that the world state falls between 0 and 9
task.world_state = task.world_state - 9 * floor (task.world_state/9);
task.simple_state = floor( task.world_state) + 1;

% Assigns basic_feature_input elements as binary. Represents the presence
% or absence of the current position in the bin.
task.basic_feature_input = zeros( task.basic_feature_length, 1);
task.basic_feature_input( task.simple_state) = 1;

% Assigns reward based on the current state
task.reward = 0;
task.reward = task.reward + task.basic_feature_input(9) * (-0.5);
task.reward = task.reward + task.basic_feature_input(4) * ( 0.5);

% Punishes actions just a little.
task.reward = task.reward - energy / 100;
task.reward = max( task.reward, -1);